Object subclass: #MiniASTNode	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniASTNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniASTNode: self! !MiniASTNode subclass: #MiniArgumentsNode	instanceVariableNames: 'arguments'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniArgumentsNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 19:55'!arguments	^ arguments! !!MiniArgumentsNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 19:55'!arguments: anObject	arguments := anObject! !!MiniArgumentsNode methodsFor: 'initialize-release' stamp: 'jws 11/17/2016 10:32'!initialize	super initialize.	arguments := OrderedCollection new.! !!MiniArgumentsNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniArgumentsNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniArgumentsNode class	instanceVariableNames: ''!!MiniArgumentsNode class methodsFor: 'instance creation' stamp: 'jws 11/17/2016 10:33'!arguments: argumentList	| newObject |	newObject := self new.	argumentList notNil		ifTrue: [newObject arguments: argumentList].	^newObject! !MiniASTNode subclass: #MiniAssignmentNode	instanceVariableNames: 'lhs rhs'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniAssignmentNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:23'!lhs	^ lhs! !!MiniAssignmentNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:23'!lhs: anObject	lhs := anObject! !!MiniAssignmentNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:23'!rhs	^ rhs! !!MiniAssignmentNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:23'!rhs: anObject	rhs := anObject! !!MiniAssignmentNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniAssignmentNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniAssignmentNode class	instanceVariableNames: ''!!MiniAssignmentNode class methodsFor: 'instance creation' stamp: 'jws 11/8/2016 20:24'!lhs: aLeftHandSiderhs: aRightHandSide	^self new		lhs: aLeftHandSide;		rhs: aRightHandSide;		yourself! !MiniASTNode subclass: #MiniBinaryNode	instanceVariableNames: 'arg1 arg2'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniBinaryNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 19:30'!arg1	^ arg1! !!MiniBinaryNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 19:30'!arg1: anObject	arg1 := anObject! !!MiniBinaryNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 19:30'!arg2	^ arg2! !!MiniBinaryNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 19:30'!arg2: anObject	arg2 := anObject! !!MiniBinaryNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniBinaryNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniBinaryNode class	instanceVariableNames: ''!!MiniBinaryNode class methodsFor: 'instance creation' stamp: 'jws 11/8/2016 19:31'!arg1: arg1arg2: arg2	^self new		arg1: arg1;		arg2: arg2;		yourself! !MiniBinaryNode subclass: #MiniAddOpNode	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniAddOpNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniAddOpNode: self! !MiniBinaryNode subclass: #MiniDivOpNode	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniDivOpNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniDivOpNode: self! !MiniBinaryNode subclass: #MiniEqualNode	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniEqualNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniEqualNode: self! !MiniBinaryNode subclass: #MiniGreaterThanNode	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniGreaterThanNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniGreaterThanNode: self! !MiniASTNode subclass: #MiniGroupNode	instanceVariableNames: 'expr'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniGroupNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 19:44'!expr	^ expr! !!MiniGroupNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 19:44'!expr: anObject	expr := anObject! !!MiniGroupNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniGroupNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniGroupNode class	instanceVariableNames: ''!!MiniGroupNode class methodsFor: 'instance creation' stamp: 'jws 11/8/2016 19:44'!expr: anExprNode	^self new		expr: anExprNode;		yourself! !MiniASTNode subclass: #MiniIfNode	instanceVariableNames: 'relation statements'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniIfNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:16'!relation	^ relation! !!MiniIfNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:16'!relation: anObject	relation := anObject! !!MiniIfNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:16'!statements	^ statements! !!MiniIfNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:16'!statements: anObject	statements := anObject! !!MiniIfNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniIfNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniIfNode class	instanceVariableNames: ''!!MiniIfNode class methodsFor: 'instance creation' stamp: 'jws 11/8/2016 20:19'!relation: aRelationstatements: aStatementList	^self new		relation: aRelation;		statements: aStatementList;		yourself! !MiniIfNode subclass: #MiniIfElseNode	instanceVariableNames: 'elseStatements'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniIfElseNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:17'!elseStatements	^ elseStatements! !!MiniIfElseNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:17'!elseStatements: anObject	elseStatements := anObject! !!MiniIfElseNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniIfElseNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniIfElseNode class	instanceVariableNames: ''!!MiniIfElseNode class methodsFor: 'instance creation' stamp: 'jws 11/8/2016 20:20'!relation: aRelationstatements: aStatementListelseStatements: elseStatements	^(self relation: aRelation statements: aStatementList)		elseStatements: elseStatements;		yourself! !MiniBinaryNode subclass: #MiniLessThanNode	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniLessThanNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniLessThanNode: self! !MiniBinaryNode subclass: #MiniMulOpNode	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniMulOpNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniMulOpNode: self! !MiniASTNode subclass: #MiniNameNode	instanceVariableNames: 'token'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniNameNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 19:15'!token	^ token! !!MiniNameNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 19:15'!token: anObject	token := anObject! !!MiniNameNode methodsFor: 'converting' stamp: 'jws 11/10/2016 09:47'!asString	^self token value! !!MiniNameNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniNameNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniNameNode class	instanceVariableNames: ''!!MiniNameNode class methodsFor: 'instance creation' stamp: 'jws 11/8/2016 19:16'!token: aToken	^self new		token: aToken;		yourself! !MiniNameNode subclass: #MiniNumberNode	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniNumberNode methodsFor: 'converting' stamp: 'jws 11/12/2016 02:14'!asInteger	^self asString asInteger! !!MiniNumberNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniNumberNode: self! !MiniASTNode subclass: #MiniParametersNode	instanceVariableNames: 'parameters'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniParametersNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:43'!parameters	^ parameters! !!MiniParametersNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:43'!parameters: anObject	parameters := anObject! !!MiniParametersNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniParametersNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniParametersNode class	instanceVariableNames: ''!!MiniParametersNode class methodsFor: 'instance creation' stamp: 'jws 11/8/2016 20:44'!parameters: aParameterList	^self new		parameters: aParameterList;		yourself! !MiniASTNode subclass: #MiniProcedureCallNode	instanceVariableNames: 'name arguments'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniProcedureCallNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 19:57'!arguments	^ arguments! !!MiniProcedureCallNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 19:57'!arguments: anObject	arguments := anObject! !!MiniProcedureCallNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 19:57'!name	^ name! !!MiniProcedureCallNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 19:57'!name: anObject	name := anObject! !!MiniProcedureCallNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniProcedureCallNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniProcedureCallNode class	instanceVariableNames: ''!!MiniProcedureCallNode class methodsFor: 'instance creation' stamp: 'jws 11/8/2016 19:58'!name: aNamearguments: arguments	^self new		name: aName;		arguments: arguments;		yourself! !MiniProcedureCallNode subclass: #MiniFunctionCallNode	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniFunctionCallNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniFunctionCallNode: self! !MiniASTNode subclass: #MiniProcedureNode	instanceVariableNames: 'name parameters statements'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniProcedureNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:52'!name	^name! !!MiniProcedureNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:53'!name: aName	name := aName! !!MiniProcedureNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:51'!parameters	^ parameters! !!MiniProcedureNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:51'!parameters: anObject	parameters := anObject! !!MiniProcedureNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:52'!statements	^ statements! !!MiniProcedureNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:52'!statements: anObject	statements := anObject! !!MiniProcedureNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniProcedureNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniProcedureNode class	instanceVariableNames: ''!!MiniProcedureNode class methodsFor: 'as yet unclassified' stamp: 'jws 11/8/2016 20:53'!name: aNameparameters: aParameterListstatements: aStatementList	^self new		name: aName;		parameters: aParameterList;		statements: aStatementList;		yourself! !MiniProcedureNode subclass: #MiniFunctionNode	instanceVariableNames: 'type'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniFunctionNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:51'!type	^ type! !!MiniFunctionNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:51'!type: anObject	type := anObject! !!MiniFunctionNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniFunctionNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniFunctionNode class	instanceVariableNames: ''!!MiniFunctionNode class methodsFor: 'instance creation' stamp: 'jws 11/8/2016 20:54'!name: aNameparameters: aParameterListtype: aTypestatements: aStatementList	^(self name: aName parameters: aParameterList statements: aStatementList)		type: aType;		yourself! !MiniASTNode subclass: #MiniProcedureSectionNode	instanceVariableNames: 'procedures'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniProcedureSectionNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 17:28'!procedures	^ procedures! !!MiniProcedureSectionNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 17:28'!procedures: anObject	procedures := anObject! !!MiniProcedureSectionNode methodsFor: 'initialize-release' stamp: 'jws 11/17/2016 10:38'!initialize	super initialize.	procedures := OrderedCollection new.! !!MiniProcedureSectionNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniProcedureSectionNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniProcedureSectionNode class	instanceVariableNames: ''!!MiniProcedureSectionNode class methodsFor: 'instance creation' stamp: 'jws 11/17/2016 10:39'!procedures: aCollectionOfProcedureDeclarations	| newObject |	newObject := self new.	aCollectionOfProcedureDeclarations notNil		ifTrue: [newObject procedures: aCollectionOfProcedureDeclarations].	^newObject! !MiniASTNode subclass: #MiniProgramNode	instanceVariableNames: 'name variables procedures main'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniProgramNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 17:22'!main	^ main! !!MiniProgramNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 17:22'!main: anObject	main := anObject! !!MiniProgramNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 17:22'!name	^name! !!MiniProgramNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 17:23'!name: aNameToken	name := aNameToken! !!MiniProgramNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 17:22'!procedures	^ procedures! !!MiniProgramNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 17:22'!procedures: anObject	procedures := anObject! !!MiniProgramNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 17:22'!variables	^ variables! !!MiniProgramNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 17:22'!variables: anObject	variables := anObject! !!MiniProgramNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniProgramNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniProgramNode class	instanceVariableNames: ''!!MiniProgramNode class methodsFor: 'instance creation' stamp: 'jws 11/8/2016 17:24'!name: aNameTokenvariables: aVariableSectionprocedures: aProcedureSectionmain: statements	^self new		name: aNameToken;		variables: aVariableSection;		procedures: aProcedureSection;		main: statements;		yourself! !MiniASTNode subclass: #MiniStatementsNode	instanceVariableNames: 'statements'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniStatementsNode methodsFor: 'copying' stamp: 'jws 11/8/2016 21:05'!, aStatement	self statements add: aStatement! !!MiniStatementsNode methodsFor: 'initialize-release' stamp: 'jws 11/8/2016 21:04'!initialize	super initialize.	statements := OrderedCollection new.! !!MiniStatementsNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 21:03'!statements	^ statements! !!MiniStatementsNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 21:03'!statements: anObject	statements := anObject! !!MiniStatementsNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniStatementsNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniStatementsNode class	instanceVariableNames: ''!!MiniStatementsNode class methodsFor: 'instance creation' stamp: 'jws 11/8/2016 21:04'!statement: aStatement	^self new, aStatement! !MiniNameNode subclass: #MiniStringNode	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniStringNode methodsFor: 'converting' stamp: 'jws 11/17/2016 10:04'!asString	| str |	str := super asString.	^str copyFrom: 2 to: str size - 1! !!MiniStringNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniStringNode: self! !MiniBinaryNode subclass: #MiniSubOpNode	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniSubOpNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniSubOpNode: self! !MiniASTNode subclass: #MiniVariableDeclarationNode	instanceVariableNames: 'name type'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniVariableDeclarationNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 17:30'!name	^ name! !!MiniVariableDeclarationNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 17:30'!name: anObject	name := anObject! !!MiniVariableDeclarationNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 17:30'!type	^ type! !!MiniVariableDeclarationNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 17:30'!type: anObject	type := anObject! !!MiniVariableDeclarationNode methodsFor: 'accessing' stamp: 'jws 11/10/2016 09:55'!typeName	^self type asString! !!MiniVariableDeclarationNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniVariableDeclarationNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniVariableDeclarationNode class	instanceVariableNames: ''!!MiniVariableDeclarationNode class methodsFor: 'instance creation' stamp: 'jws 11/8/2016 17:30'!name: aNameTokentype: aTypeToken	^self new		name: aNameToken;		type: aTypeToken;		yourself! !MiniASTNode subclass: #MiniVariableSectionNode	instanceVariableNames: 'variables'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniVariableSectionNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 17:25'!variables	^ variables! !!MiniVariableSectionNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 17:25'!variables: anObject	variables := anObject! !!MiniVariableSectionNode methodsFor: 'initialize-release' stamp: 'jws 11/17/2016 10:37'!initialize	super initialize.	variables := OrderedCollection new.! !!MiniVariableSectionNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniVariableSectionNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniVariableSectionNode class	instanceVariableNames: ''!!MiniVariableSectionNode class methodsFor: 'instance creation' stamp: 'jws 11/17/2016 10:39'!variables: aCollectionOfVariableDeclarations	| newObject |	newObject := self new.	aCollectionOfVariableDeclarations notNil		ifTrue: [newObject variables: aCollectionOfVariableDeclarations].	^newObject! !MiniASTNode subclass: #MiniWhileNode	instanceVariableNames: 'relation statements'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniWhileNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:26'!relation	^ relation! !!MiniWhileNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:26'!relation: anObject	relation := anObject! !!MiniWhileNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:26'!statements	^ statements! !!MiniWhileNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:26'!statements: anObject	statements := anObject! !!MiniWhileNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniWhileNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniWhileNode class	instanceVariableNames: ''!!MiniWhileNode class methodsFor: 'instance creation' stamp: 'jws 11/8/2016 20:27'!relation: aRelationstatements: someStatements	^self new		relation: aRelation;		statements: someStatements;		yourself! !MiniASTNode subclass: #MiniWriteIntegerNode	instanceVariableNames: 'expr'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniWriteIntegerNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:11'!expr	^expr! !!MiniWriteIntegerNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:11'!expr: anExpr	expr := anExpr! !!MiniWriteIntegerNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniWriteIntegerNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniWriteIntegerNode class	instanceVariableNames: ''!!MiniWriteIntegerNode class methodsFor: 'instance creation' stamp: 'jws 11/8/2016 20:12'!expr: anExpr	^self new		expr: anExpr;		yourself! !MiniASTNode subclass: #MiniWriteLnNode	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniWriteLnNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniWriteLnNode: self! !MiniASTNode subclass: #MiniWriteStringNode	instanceVariableNames: 'expr'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-AST-Nodes'!!MiniWriteStringNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:13'!expr	^expr! !!MiniWriteStringNode methodsFor: 'accessing' stamp: 'jws 11/8/2016 20:13'!expr: anExpr	expr := anExpr! !!MiniWriteStringNode methodsFor: 'visiting' stamp: 'jws 11/9/2016 10:36'!accept: aVisitor	^aVisitor visitMiniWriteStringNode: self! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniWriteStringNode class	instanceVariableNames: ''!!MiniWriteStringNode class methodsFor: 'instance creation' stamp: 'jws 11/8/2016 20:13'!expr: anExpr	^self new		expr: anExpr;		yourself! !!MiniWriteStringNode class methodsFor: 'instance creation' stamp: 'jws 11/8/2016 20:07'!token: aStringToken	^self new		token: aStringToken;		yourself! !