Object subclass: #MiniEnvironment	instanceVariableNames: 'procedures variables'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-Environment-Model'!!MiniEnvironment methodsFor: 'running' stamp: 'jcb 11/10/2016 13:52'!activateScope	variables := (MiniScope newScopeIn: self variables).	procedures := (MiniScope newScopeIn: self procedures).! !!MiniEnvironment methodsFor: 'running' stamp: 'jcb 11/9/2016 12:40'!addProcedure: aKey value: aValue	(self procedures bind:aKey to:aValue)! !!MiniEnvironment methodsFor: 'running' stamp: 'jcb 11/9/2016 12:37'!addVariable: aKey value: aValue	(self variables bind:aKey to:aValue)! !!MiniEnvironment methodsFor: 'running' stamp: 'jcb 11/10/2016 13:55'!deactivateScope	variables := self variables outerScope.	procedures := self procedures outerScope.! !!MiniEnvironment methodsFor: 'running' stamp: 'jcb 11/9/2016 12:38'!procedureNamed: aKey	^(self procedures bindingFor:aKey)! !!MiniEnvironment methodsFor: 'running' stamp: 'jcb 11/9/2016 12:40'!procedureNamed: aKey put: aValue		^(self procedures rebind:aKey to:aValue)! !!MiniEnvironment methodsFor: 'running' stamp: 'jcb 11/9/2016 12:39'!variableNamed: aKey	^(self variables bindingFor:aKey)! !!MiniEnvironment methodsFor: 'running' stamp: 'jcb 11/9/2016 12:40'!variableNamed: aKey put: aValue	^(self variables rebind:aKey to:aValue)! !!MiniEnvironment methodsFor: 'initialize-release' stamp: 'jcb 11/9/2016 10:39'!initialize	procedures := MiniScope globalScope.	variables := MiniScope globalScope.! !!MiniEnvironment methodsFor: 'accessing' stamp: 'jcb 11/9/2016 10:06'!procedures	^procedures! !!MiniEnvironment methodsFor: 'accessing' stamp: 'jcb 11/10/2016 14:13'!procedures:newProc	procedures:= newProc.! !!MiniEnvironment methodsFor: 'accessing' stamp: 'jcb 11/9/2016 10:06'!variables	^variables! !!MiniEnvironment methodsFor: 'accessing' stamp: 'jcb 11/10/2016 14:14'!variables: aVar	variables:=aVar.! !Error subclass: #MiniError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-Environment-Model'!MiniError subclass: #MiniMultipleDeclarationError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-Environment-Model'!Object subclass: #MiniScope	instanceVariableNames: 'outerScope bindings'	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-Environment-Model'!!MiniScope methodsFor: 'running' stamp: 'jcb 11/8/2016 16:34'!bind: aKey to: aValue	"Binds a key to a value in a dictionary. Throws error if Key already exists"	(self bindings includesKey: aKey)	ifTrue: [MiniMultipleDeclarationError signal: 'Already Defined'.]	ifFalse:[self bindings at: aKey put: aValue.]! !!MiniScope methodsFor: 'running' stamp: 'jcb 11/9/2016 10:01'!bindingFor: aKey	"Get value from dictionary key. Searches other outerScopes as well"	(self bindings includesKey: aKey)	ifTrue: [^self bindings at:aKey ]	ifFalse: [^self outerScope bindingFor: aKey]	! !!MiniScope methodsFor: 'running' stamp: 'jcb 11/8/2016 16:34'!hasBindingFor: aKey	(self bindings includesKey: aKey)	ifTrue: [^true ]	ifFalse: [^self outerScope hasBindingFor: aKey]		! !!MiniScope methodsFor: 'running' stamp: 'jcb 11/8/2016 16:34'!rebind: aKey to: aValue	(self bindings includesKey: aKey)	ifTrue: [self bindings at: aKey put: aValue.]	ifFalse: [outerScope rebind: aKey to: aValue.]	! !!MiniScope methodsFor: 'initialize-release' stamp: 'jcb 11/8/2016 12:00'!initialize	bindings := Dictionary new.	outerScope:= nil.! !!MiniScope methodsFor: 'accessing' stamp: 'jcb 11/8/2016 15:50'!bindings	"Getter"	^bindings! !!MiniScope methodsFor: 'accessing' stamp: 'jcb 11/8/2016 15:51'!bindings: aDictionary	"setter"	bindings := aDictionary! !!MiniScope methodsFor: 'accessing' stamp: 'jcb 11/8/2016 15:51'!outerScope	"getter"	^outerScope! !!MiniScope methodsFor: 'accessing' stamp: 'jcb 11/8/2016 15:51'!outerScope: aScope	"setter"	outerScope := aScope! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniScope class	instanceVariableNames: ''!!MiniScope class methodsFor: 'instance creation' stamp: 'jcb 11/10/2016 10:08'!globalScope	^self new 		outerScope: MiniVoidScope default;		yourself.! !!MiniScope class methodsFor: 'instance creation' stamp: 'jcb 11/10/2016 10:08'!newScopeIn: aScope	^self new		outerScope: aScope;		yourself.! !MiniError subclass: #MiniUndeclaredError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-Environment-Model'!MiniScope subclass: #MiniVoidScope	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-Environment-Model'!!MiniVoidScope methodsFor: 'comparing' stamp: 'jcb 11/8/2016 11:49'!hasBindingFor: binding	^false! !!MiniVoidScope methodsFor: 'accessing' stamp: 'jcb 11/7/2016 18:15'!bind: dict to: value	MiniVoidScopeError signal: 'Can not redifine MiniVoidScope'! !!MiniVoidScope methodsFor: 'accessing' stamp: 'jcb 11/8/2016 12:46'!bindingFor: binding	MiniUndeclaredError signal: 'Binding is not defined'! !!MiniVoidScope methodsFor: 'accessing' stamp: 'jcb 11/7/2016 18:02'!bindings		^nil! !!MiniVoidScope methodsFor: 'accessing' stamp: 'jcb 11/7/2016 18:13'!bindings: dict		MiniVoidScopeError signal: 'Can not redefine bindings'! !!MiniVoidScope methodsFor: 'accessing' stamp: 'jcb 11/7/2016 18:02'!outerScope		^self! !!MiniVoidScope methodsFor: 'accessing' stamp: 'jcb 11/7/2016 18:12'!outerScope: aScope		MiniVoidScopeError signal: 'Can not redefine outerScope'! !!MiniVoidScope methodsFor: 'accessing' stamp: 'jcb 11/7/2016 18:17'!rebind: binding to: value	MiniVoidScopeError signal: 'Can not rebind for MiniVoidScopeError'! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!MiniVoidScope class	instanceVariableNames: 'defaultt'!!MiniVoidScope class methodsFor: 'instance creation' stamp: 'jcb 11/7/2016 18:00'!default	defaultt isNil		ifTrue: [defaultt := super new].	^defaultt! !!MiniVoidScope class methodsFor: 'instance creation' stamp: 'jcb 11/7/2016 18:27'!globalScope	NotImplemented signal: 'This cannot be global scope'! !!MiniVoidScope class methodsFor: 'instance creation' stamp: 'jcb 11/7/2016 18:26'!new	NotImplemented signal: 'this is singleton'! !!MiniVoidScope class methodsFor: 'instance creation' stamp: 'jcb 11/7/2016 18:27'!newScopeIn: aScope	NotImplemented signal: 'Singleton, cannot redefine'! !MiniError subclass: #MiniVoidScopeError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Mini-Environment-Model'!